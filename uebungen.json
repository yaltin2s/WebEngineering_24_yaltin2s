{
  "exercise 1": {
    "A1.1":{
      "tittle": "World Wide Web",
      "frage": "1. Mit welchen fachlichen Argumenten wurde das WWW-Proposal von Tim Berners-Lee abgelehnt?\n2.Was sind die fachlichen Argumente, warum das WWW dennoch ein Erfolg wurde?\n3.Was wäre der Preis für die garantierte Verhinderung von \"broken links\"?",
      "lösung": "I. Kritik an TBLs WWW-Proposal:\n\n\n\n1. Bestehende Alternativen: Es gab bereits Dienste wie FTP und Gopher, sodass das World Wide Web überflüssig erschien.\n\n2. Technische Aspekte: Ein Weltweites Hypertextsystem kam vielen Befürwortern zu umständlich vor.\n\n3. Inkompatibilität: Viele fürchteten, daß das WWW bestehende Dienste stören werde.\n\n4. Unhandlichkeit: Das ursprüngliche System wurde von manchen als erheblich zu komplex für Dummies gemieden.\n\n5. Wirtschaftliche Erwägungen: Es fehlte eine klare Perspektive, wie der Autor Gewinne machen will.\n\nII. Das WWW zum Erfolg unterstützenden Argumente:\n\n\n\n1. Einfacher Zugang: Hypertext erlaubt intuitive Navigation.\n\n2. Offener Standard: Die Offenheit des Systems förderte die Verbreitung.\n\n3. HTML und HTTP: Diese Technologien gaben dem Web Flexibilität und Skalierbarkeit.\n\n4. Grafische Browser: Browser wie Mosaic machten das Web benutzbarer.\n\n5. Innovationen: Durch das WWW entstanden viele neue Dienste wie E-Commerce und the Web as a Social Network.\n\nIII. Preiskalkulation hinsichtlich \"Broken Links\":\n\n\uFEFF\uFEFF \n\n1. Zentrale Kontrolle: Inhalte müssten zentral überwacht werden, was dem freien Umgang des WWW widerstreben würde.\n\n2. Zusätzliche Speicherbelastungen: Alle Decks müssen ständig gehalten werden, was riesige Kosten erzeugt.\n\n3. Permanente Neu- und Bearbeitung: Redirects und Archive müssen fortlaufend aktualisiert werden.\n\n4. Rechtsfragen: Urheberrecht und Willen zur Permanentisierung wären problematisch. "
    },
    "A1.2": {
      "tittle": "HTTP",
      "frage": "1.Sie bekommen im Browser den HTTP Status Code 200. Was bedeutet das?\n2.Sie bekommen im Browser den HTTP Status Code 301. Was hat das zu bedeuten?\n3.Sie bekommen im Browser den HTTP Status Code 400. Was hat das zu bedeuten? Was können Sie dagegen tun?\n4.Sie bekommen im Browser den HTTP Status Code 403. Was hat das zu bedeuten? Was können Sie dagegen tun?\n5.In einer Webanwendung benötigen Sie eine OPTIONS-Anfrage, die die Optionen des Servers vor dem eigentlichen Zugriff erfragen soll. Aus Performancegründen soll die Abfrage aber cacheable sein. Wie könnten Sie dafür eine Lösung angehen?",
      "lösung": "1.Der HTTP-Statuscode 200 bedeutet \"OK\". Dieser Code signalisiert, dass die Anfrage erfolgreich war und der Server die angeforderten Daten ohne Probleme zurückgegeben hat.s\n\n2. Der HTTP-Statuscode 301 bedeutet \"Moved Permanently\" (dauerhaft verschoben).\n\n3. Der HTTP-Statuscode 400 bedeutet \"Bad Request\" (fehlerhafte Anfrage).\n\n\tBedeutung: Dieser Code signalisiert, dass der Server die Anfrage nicht verarbeiten konnte, weil sie ungültig oder fehlerhaft war.\n\n\tGegenmaßnahmen:\n\n\t\t1.Überprüfen Siedie URL:\n\n\t\t2.Aktualisieren Sie die Seite.\n\n\t\t3.Cache und Cookies löschen\n\n\t\t4.Prüfen Sie die Parameter\n\n\t\t5.Kontaktieren Sie den Serveradministrator.\n\n4. Der HTTP-Statuscode 403 bedeutet \"Forbidden\" (verboten).\n\n\tBedeutung: Dieser Code signalisiert, dass der Server die Anfrage versteht, sie jedoch verweigert, weil der Client\n\n\t\t\t\t\t\tkeine Berechtigung hat, auf die angeforderte Ressource zuzugreifen.\n\n\n\n\tGegenMaßnahmen:\n\na. Berechtigungen prüfen.\nb. Kontakt mit dem Website-Administrator aufnehmen.\nc. Überprüfung der URL.\nd. Browser-Cache und Cookies löschen.\n5. OPTIONS *|&lt;request-target&gt;[\"?\"&lt;query&gt;] HTTP/1.1\n\n\tCache-Control: public, max-age=3600"
    },
    "A1.3":{
      "tittle": "Quiz zu HTML",
      "frage": "1.Was ist HTML?\n2. Wofür steht HTML?\n3. Wofür wird HTML eingesetzt?\n4. Wer hat HTML erfunden?\n5. Zu welchem ursprünglichen Zweck wurde HTML erfunden?\n6. Wer arbeitet alles an der Weiterentwicklung von HTML?\n",
      "lösung": "1.eine Auszeichnungssprache.\n2. Hypertext Markup Language.\n3. für die Strukturierung digitaler Dokumente.\n4. Tim Berners-Lee.\n5. für den Austausch wissenschaftlicher Publikationen.\n6. die Web Hypertext Application Technology Working Group (WHATWG)\ndas World Wide Web Consortium (W3C)"
    },
    "A1.4": {
      "tittle": "Quiz zu HTML-Tags",
      "frage": "1. Was ist ein HTML-Tag?\n2. Wofür nutzt man einen HTML-Tag?\n3. Woraus besteht ein HTML-Tag und wie setzt man ihn ein?\n4. Was ist ein HTML-Attribut?\n5. Wofür nutzt man ein HTML-Attribut?\n6. Wie schreibt man einen Kommentar in HTML?",
      "lösung":"1. ein Auszeichnungselement\n2. Zur Einbettung weiterer Inhalte, die über Text hinausgehen\nZur Strukturierung von Webseiteninhalten\n3. &lt;h2&gt;Überschrift&lt;/h2&gt;\n   Hallo Welt!&lt;br&gtWillkommen.\n   &lt;p&gtParagraph&lt;/p&gt\n4. eine Eigenschaft\n5. zur Beschreibung zusätzlicher Eigenschaften von HTML-Tags\n6. &lt;!-- Kommentar --&gt"
    },
    "A1.5": {
      "tittle": "Lückentext zu HTML",
      "frage": "Ergänzen Sie die fehlenden HTML-Tags in dem folgenden HTML-Quelltext:",
      "lösung": "&lt;!DOCTYPE html&gt;\n&lt;html&gt;  \n&lt;head&gt;    \n&lt;title&gt;Titel der Webseite&lt;/title&gt;  \n&lt;/head&gt;  \n&lt;body&gt;    \n&lt;h1&gt;\nAnwendung von HTML-Tags\n&lt;/h1&gt;\n    \n&lt;h2&gt;\nMotivation\n&lt;/h2&gt;    \n&lt;p&gt;Dieser Lückentext unterstützt Sie dabei selbst einzuschätzen, ob Sie in der Lage sind das HTML-Grundgerüst und die HTML-Tags zum Markieren von Überschriften,\n Paragraphen und HTML-Kommentaren einzusetzen.    \n&lt;/p&gt;\n&lt;!--    \n&lt;h2&gt;\nAuskommentierung von HTML-Code\n&lt;/h2&gt;    \n&lt;p&gt;\nDieser Abschnitt wurde auskommentiert.\n&lt;/p&gt;--&gt;  \n&lt;/body&gt;\n&lt;/html&gt;"
    },
    "A1.6": {
      "tittle": "HTML-Literatur lesen und Fragen beantworten",
      "frage": "Arbeiten Sie ein HTML-Tutorial durch (W3Schools oder selfhtml) und beantworten Sie dazu folgende Fragen:\n1. Was ist HTML?\n2.Wie kann man eine geschachtelte geordnete Liste der Tiefe 3 erzeugen?\n3. Wie ist eine HTML-Tabelle aufgebaut?\n4. Welche Konventionen sollte man bei Pfaden und Dateinamen beachten?\n5. Wie baut man in HTML ein Menü?\n6. Welche Attribute sollte man bei Bildern wie verwenden?",
      "lösung": "1.HTML stands for Hyper Text Markup Language\nHTML is the standard markup language for creating Web pages\nHTML describes the structure of a Web page\nHTML consists of a series of elements\nHTML elements tell the browser how to display the content\nHTML elements label pieces of content such as \"this is a heading\", \"this is a paragraph\", \"this is a link\", etc.\n2.&lt;ol&gt;    &lt;li&gt;Erstes Element\n        &lt;ol&gt;\n           &lt;li&gt;Unterelement 1\n                &lt;ol&gt;\n                    &lt;li&gt;Tiefe 3 Element 1&lt;/li&gt;\n                    &lt;li&gt;Tiefe 3 Element 2&lt;/li&gt;\n                &lt;/ol&gt;\n            &lt;/li&gt;\n            &lt;li&gt;Unterelement 2\n                &lt;ol&gt;\n                    &lt;li&gt;Tiefe 3 Element 3&lt;/li&gt;\n                    &lt;li&gt;Tiefe 3 Element 4&lt;/li&gt;\n                &lt;/ol&gt;\n            &lt;/li&gt;\n        &lt;/ol&gt;\n    &lt;/li&gt;\n    &lt;li&gt;Zweites Element\n        &lt;ol&gt;\n            &lt;li&gt;Unterelement 3\n                &lt;ol&gt;\n                    &lt;li&gt;Tiefe 3 Element 5&lt;/li&gt;\n                &lt;/ol&gt;\n            &lt;/li&gt;\n        &lt;/ol&gt;\n    &lt;/li&gt;\n&lt;/ol&gt;\n************************************************************************\n3. &lt;table&gt;\n &lt;thead&gt;\n  &lt;tr&gt;\n   &lt;th&gt;Überschrift 1&lt;/th&gt;\n   &lt;th&gt;Überschrift 2&lt;/th&gt;\n  &lt;/tr&gt;\n &lt;/thead&gt;\n &lt;tbody&gt;\n\n  &lt;tr&gt;\n\n   &lt;td&gt;Zelle 1&lt;/td&gt;\n   &lt;td&gt;Zelle 2&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n\n   &lt;td&gt;Zelle 3&lt;/td&gt;\n   &lt;td&gt;Zelle 4&lt;/td&gt;\n  &lt;/tr&gt;\n &lt;/tbody&gt;\n\n&lt;/table&gt;\n************************************************************************\n4. Verwende nur Kleinbuchstaben.\nVerwende anstelle von Leerzeichen Bindestriche oder Unterstriche.\nWähle aussagekräftige, leicht verständliche Namen, die den Inhalt oder Zweck beschreiben.\nVermeide Sonderzeichen.\nHalte eine einheitliche Struktur für alle Pfade und Dateinamen ein.\n************************************************************************\n5.\t&lt;nav&gt;\n &lt;ul&gt;\n  &lt;li&gt;&lt;a href=\"#home\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=\"#about\"&gt;About&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=\"#services\"&gt;Services&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=\"#contact\"&gt;Contact&lt;/a&gt;&lt;/li&gt;\n &lt;/ul&gt;\n&lt;/nav&gt;\n************************************************************************\n6. 1. src: source: &lt;img src:\"img.jpg\"&gt;\n2. alt: alternative name: &lt;img src=\"img.jpg\", alt= \"schönes Bild\"&gt;\n3. width und height: Bild maßen in pixel: &lt;img src=\"img.jpg\", alt= \"schönes Bild\", width=\"300\", height=\"200\"&gt;\n4. loading=\"lazy\": Verzögert das Laden des Bildes, bis es im sichtbaren Bereich des Bildschirms ist. Verbessert die Ladegeschwindigkeit der Seite  &lt;img  src=\"bild.jpg\" ,alt=\"Bild\" ,loading=\"lazy\"&gt;\n5. title: Zeigt einen Tooltip an, wenn der Benutzer mit der Maus über das Bild fährt: &lt;img src=\"bild.jpg\", alt=\"Bild\", title=\"Tooltip Text\"&gt;"
    },
    "A1.7":{
      "tittle": "HTML-Wireframe",
      "photo": ["Uebung1/wireframe01 (1).jpg"],
      "frage": "Gegeben ist folgendes HTML-Wireframe:\n<img src='Uebung1/wireframe01 (1).jpg' width=300 height=350>\nMit welchem HTML-Code (ohne CSS, nur mit HTML-Tags) kann man dieses Wireframe exakt nachbilden?",
      "lösung": "Lösung durch den Link abrufbar",
      "references": [
        "Uebung1/Inventors.html"
      ]
    }
  },
  "exercise 2":{
    "A2.1": {
      "tittle": "Zuordnung der Homepage",
      "frage": "Geben Sie hier die Repository-URL Ihrer Homepage an, damit ich sie Ihrer Person eindeutig zuordnen kann:\nEs muss ein privates Repository sein, auf das nur Sie und ich Zugriff haben. Stellen Sie also sicher, dass ich als Collaborator eingetragen bin und die Einladung bestätigt habe. Mein GitHub-Benutzername ist <code>akless</code>.\nDiese Aufgabe ist Pflicht, damit Sie später an der Prüfung teilnehmen können.",
      "lösung": "<a href='https://github.com/yaltin2s/WebEngineering_24_yaltin2s' target='_blank'>yaltin2s/WebEngineering_24_yaltin2s</a>"
    },
    "A2.2":{
      "tittle": "CSS-Selektoren und CSS-Farben",
      "frage": "Berechnen Sie die Spezifität folgender CSS Selektoren:<ol><li>div div div:focus .inner</li><li>h1 + div.main</li><li>div a:link[href*='h-brs']</li><li>nav > a:hover::before</li><li>ul#primary-nav li.active</li></ol>\n\nRechnen Sie folgende RGB-Werte mit den DevTools des Webbrowsers in HSL-Werte um<ol><li>#ffffff</li><li>#000</li><li>#ab0978</li><li>rgb(127,255,33)</li><li>rgba(255,127,33,0.8)</li></ol>",
      "lösung": "<ol><li>3 (elements) + 10 (pseudo-class) + 10 (class) = 23</li><li>1 (h1) + 1 (div) + 10 (class) = 12</li><li>1 (div) + 1 (a) + 10 () + 10 (attribute) = 22</li><li>1 (nav) + 1 (a) + 10 () + 1 (pseudo-element) = 13</li><li>1 (ul) + 100 (ID) + 1 (li) + 10 (class) = 112</li></ol>\n<ol><li>(0°,0%,0%)</li><li>(0°,0%,0%)</li><li>(316°,88%,35.3%)</li><li>(96°,77%,56.4%)</li><li>(24°,77%,56.4%)</li></ol>"
    },
    "A2.3": {
      "tittle": "CSS-Positionierung",
      "frage": "Bauen Sie das dynamische Verhalten in den folgenden beiden Videos exakt nach:\n\n<a href='https://www.youtube.com/watch?v=PE3POxjDspo' target='_blank'>Video 1</a>\n<a href='https://www.youtube.com/watch?v=HVmnv3k4__E' target='_blank'>Video 2</a>\nArbeiten Sie in beiden Fällen nur mit HTML und CSS, ohne JavaScript.\n\nDas Bild aus dem zweiten Video finden Sie <a href='https://kaul.inf.h-brs.de/ccm/we/ws24/resources/assets/h-brs.jpg' target='_blank'>hier.</a>",
      "lösung": "Sticky Überschrift:\nBild:",
      "references": ["Uebung2/HeaderAufgabe.html","Uebung2/Uebung2_2.html"]
    },
    "A2.4": {
      "tittle": "Wireframe mit HTML und CSS",
      "frage": "Gegeben ist folgendes HTML-Wireframe:\n<img src='Uebung2/img.png' width=350 height=350>\nMit welchem HTML- und CSS-Code kann man dieses Wireframe exakt nachbilden? Schreiben Sie Ihren CSS-Code direkt in die HTML-Datei.\nDie grünliche Farbe ist <cod> #a9d7d1</code> und die Hintergrundfarbe vom HTML-Formular ist <code>snow</code>. Die Schriftart ist eine <a href='https://fonts.google.com/' target='_blank'>Google Font:</a> <code>Roboto</code>.",
      "lösung": "",
      "references": ["Uebung2/SurveyForm.html"]
    }
  },
  "exercise 3":{
    "A3.1": {
      "tittle": "Responsiv mit Flexbox und Desktop-First",
      "frage": "Spielen Sie zunächst das <a href='https://flexboxfroggy.com/#de' target='_blank'>Flexbox Froggy-Spiel</a>, um Flexbox zu lernen.\n\nImplementieren Sie dann ausschließlich mit HTML, CSS und Flexbox das folgende Responsive Webdesign nach der Desktop-First-Strategie:\n<img src='Uebung3/holy-grail1.png' width= 300 height= 350>",
      "lösung": "Lösung ist durch Link abrufbar",
      "references": ["Uebung3/3_1.html"]
    },
    "A3.2": {
      "tittle": "Responsiv mit Grid und Mobile-First",
      "frage": "Spielen Sie zunächst das <a href='https://cssgridgarden.com/#de' target= '_blank'>Grid Garden</a>-Spiel, um Grid zu lernen.\n\nImplementieren Sie dann das gleiche Responsive Webdesign wie zuvor in Aufgabe 3.1, allerdings diesmal mit Grid und der Mobile-First-Strategie. Vermeiden Sie außerdem das Erscheinen von horizontalen Scrollbars so weit wie möglich.",
      "lösung": "Lösung ist durch Link abrufbar",
      "references": ["Uebung3/3_2.html"]
    },
    "A3.3": {
      "tittle": "Wireframe responsive mit Grid",
      "frage": "Implementieren Sie folgende Landing-Page responsiv mit Grid:\n<img src='Uebung3/landing.png' width= 400 height=300>\nVermeiden Sie auch hier das Erscheinen von horizontalen Scrollbars so weit wie möglich. Für das Bild auf der Landing-Page verwenden Sie bitte<a href='Uebung3/landing-img.png' target=_blank>diese Bilddatei.</a>",
      "lösung": "Lösung ist durch Link abrufbar",
      "references": ["Uebung3/3_3.html"]
    }
  },
  "exercise 4":{
    "A4.1": {
      "tittle": "Funktionen",
      "frage": "Schreiben Sie folgende Funktionen in JavaScript:<ol><li>Eine Funktion <code>identity()</code>, die ein Argument als Parameter entgegennimmt und dieses als Ergebnis zurückgibt.<li>Eine Funktion <code>identity_function()</code>, die ein Argument als Parameter entgegennimmt und eine Funktion zurückgibt, die dieses Argument zurückgibt.<li>Zwei binäre Funktionen <code>add</code> und <code>mul</code>, die Summe und Produkt berechnen.<li>Eine Addierer-Funktion <code>addf()</code>, so dass <code>addf(x)(y)</code> genau <code>x + y</code> zurückgibt. (Es haben also zwei Funktionsaufrufe zu erfolgen. <code>addf(x)</code> liefert eine Funktion, die auf <code>y</code> angewandt wird.)<li>Eine Funktion <code>applyf()</code>, die aus einer binären Funktion wie <code>add(x,y)</code> eine Funktion <code>addf</code> berechnet, die mit zwei Aufrufen das gleiche Ergebnis liefert, z.B. <code>addf = applyf(add); addf(x)(y)</code> soll <code>add(x,y)</code> liefern. Entsprechend <code>applyf(mul)(5)(6)</code> soll <code>30</code> liefern, wenn <code>mul</code> die binäre Multiplikation ist.",
      "lösung": "<code>/*\n1. Eine Funktion identity(),\ndie ein Argument als Parameter entgegennimmt\nund dieses als Ergebnis zurückgibt.\n */\nfunction identity(value){\n    return value;\n}\n/*\n2. Eine Funktion identity_function(),\ndie ein Argument als Parameter entgegennimmt\nund eine Funktion zurückgibt,\ndie dieses Argument zurückgibt.\n */\nfunction identity_function(value){\n    return function (){\n        return value;\n    };\n}\n/*\n3. Eine binäre Funktion add, die die Summe berechnet\n */\nfunction add(x,y){\n    return x+y;\n}\n/*\n3. Eine binäre Funktion mul, die das Produkt berechnet\n */\nfunction mul(x,y){\n    return x*y;\n}\n/*\n4. Eine Addierer-Funktion addf(), so dass addf(x)(y) genau x + y zurückgibt.\n*/\nfunction addf(x){\n    return function (y){\n      return x+y;\n    };\n}\n/*\n5. Eine Funktion applyf(),\ndie aus einer binären Funktion\nwie add(x,y) eine Funktion addf berechnet\n */\nfunction applyf(func){\n    return function (x){\n        return function (y){\n            return func(x,y);\n        };\n    };\n}</code>"
    },
    "A4.2": {},
    "A4.3": {},
    "A4.4": {}
  },
  "exercise 5":{
    "A5.1": {},
    "A5.2":{},
    "A5.3": {}
  },
  "exercise 6":{
    "A6.1": {},
    "A6.2": {},
    "A6.3": {},
    "A6.4": {},
    "A6.5": {}
  },
  "exercise 7":{
    "A7.1": {},
    "A7.2": {}
  },
  "exercise 8":{
    "A8.1": {},
    "A8.2": {},
    "A8.3": {}
  },
  "exercise 9":{
    "A9.1": {},
    "A9.2": {},
    "A9.3": {}
  },
  "exercise 10":{
    "A10.1": {},
    "A10.2": {},
    "A10.3": {}
  }
}